name: Main workflow

on:
  push:
    branches:
      - 'main'

env:
  REGISTRY: threesigmalabs.azurecr.io
  DAC_IMAGE_NAME: threesigmaxyz/starkex-ragnarok-dac

jobs:
  release:
    name: Create release
    runs-on: ubuntu-latest
    env:
      MAJOR: 1
      MINOR: 0
    steps:
      - id: version
        name: Create Release
        run: echo "value=${{ env.MAJOR }}.${{ env.MINOR }}.$(date +%y%j | tr -d '\n').$(date +%H%M | tr -d '\n')" >> $GITHUB_OUTPUT
    outputs:
      release_version: ${{ steps.version.outputs.value }}
  
  # Ideally this job would be split in 2, but because the github runners don't share context between jobs
  # and using shared storage surpasses the limit quickly, we have to have these 3 unified
  build-push:
    name: Build and Push solution
    runs-on: ubuntu-latest
    needs: release
    
    steps:
      - uses: actions/checkout@v3
      - name: Set Environment vars
        run: |
          echo "COMMIT_TAG=$GITHUB_SHA" >> $GITHUB_ENV
          echo "RELEASE_VERSION=${{needs.release.outputs.release_version}}" >> $GITHUB_ENV

      - name: Build Docker images
        run: docker compose build committee

      - name: Login to Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: threesigmalabs.azurecr.io
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

      - name: Tag docker image
        run: |
          docker tag ${{ env.DAC_IMAGE_NAME }}:${{needs.release.outputs.release_version}} ${{ env.REGISTRY }}/${{ env.DAC_IMAGE_NAME }}:${{needs.release.outputs.release_version}}

      - name: Push Operator Docker image to private azure registry feed
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.DAC_IMAGE_NAME }}:${{needs.release.outputs.release_version}}

      - name: Checkout Target Repository
        uses: actions/checkout@v3
        with:
          ref: main
          repository: threesigmaxyz/starkex-ragnarok-apicharts
          path: helm
          token: ${{ secrets.GH_TOKEN_FOR_CHARTS_UPDATE  }}

      - name: Update Image Version in the related HelmChart values.yaml
        uses: fjogeleit/yaml-update-action@main
        with:
          value: ${{ needs.release.outputs.release_version }}
          repository: threesigmaxyz/starkex-ragnarok-apicharts
          masterBranchName: main
          branch: deployment/${{ needs.release.outputs.release_version }}
          targetBranch: main
          createPR: true
          message: 'Update Image Version to ${{ needs.release.outputs.release_version }}'
          token: ${{ secrets.GH_TOKEN_FOR_CHARTS_UPDATE  }}
          workDir: helm
          noCompatMode: false
          changes: |
            {
              "starkex-ragnarok-dac/values.yaml": {
                "image.tag": "${{ needs.release.outputs.release_version }}"
              }
            }
